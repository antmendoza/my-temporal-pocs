[project]
name = "temporalio-samples"
version = "0.1a1"
description = "Temporal.io Python SDK samples"
authors = [{ name = "Temporal Technologies Inc", email = "sdk@temporal.io" }]
requires-python = ">=3.10"
readme = "README.md"
license = "MIT"
dependencies = ["temporalio>=1.18.0,<2"]

[project.urls]
Homepage = "https://github.com/temporalio/samples-python"
Repository = "https://github.com/temporalio/samples-python"
Documentation = "https://docs.temporal.io/docs/python"
"Bug Tracker" = "https://github.com/temporalio/samples-python/issues"

[dependency-groups]

open-telemetry = [
    "temporalio[opentelemetry]",
    "opentelemetry-exporter-otlp-proto-grpc",
]



[tool.hatch.build.targets.sdist]
include = ["./**/*.py"]

[tool.hatch.build.targets.wheel]
include = ["./**/*.py"]
packages = [
    "activity_worker",
    "bedrock",
    "cloud_export_to_parquet",
    "context_propagation",
    "custom_converter",
    "custom_decorator",
    "custom_metric",
    "dsl",
    "encryption",
    "gevent_async",
    "hello",
    "langchain",
    "message_passing",
    "nexus",
    "open_telemetry",
    "patching",
    "polling",
    "prometheus",
    "pydantic_converter",
    "pydantic_converter_v1",
    "pyproject.toml",
    "replay",
    "schedules",
    "sentry",
    "sleep_for_days",
    "tests",
    "trio_async",
    "updatable_timer",
    "worker_specific_task_queues",
    "worker_versioning",
]

[tool.hatch.build.targets.wheel.sources]
"./**/*.py" = "**/*.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.poe.tasks]
format = [{cmd = "uv run black ."}, {cmd = "uv run isort ."}]
lint = [{cmd = "uv run black --check ."}, {cmd = "uv run isort --check-only ."}, {ref = "lint-types" }]
lint-types = "uv run --all-groups mypy --check-untyped-defs --namespace-packages ."
test = "uv run --all-groups pytest"

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "opentelemetry.*"
ignore_errors = true
